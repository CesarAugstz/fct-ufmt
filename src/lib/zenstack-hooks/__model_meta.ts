/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
  models: {
    user: {
      name: 'User',
      fields: {
        id: {
          name: 'id',
          type: 'String',
          isId: true,
          attributes: [{ name: '@default', args: [] }],
        },
        createdAt: {
          name: 'createdAt',
          type: 'DateTime',
          attributes: [{ name: '@default', args: [] }],
        },
        updatedAt: {
          name: 'updatedAt',
          type: 'DateTime',
          attributes: [{ name: '@updatedAt', args: [] }],
        },
        email: {
          name: 'email',
          type: 'String',
        },
        password: {
          name: 'password',
          type: 'String',
        },
        name: {
          name: 'name',
          type: 'String',
          isOptional: true,
        },
        role: {
          name: 'role',
          type: 'Role',
          attributes: [{ name: '@default', args: [] }],
        },
      },
      uniqueConstraints: {
        id: {
          name: 'id',
          fields: ['id'],
        },
        email: {
          name: 'email',
          fields: ['email'],
        },
      },
    },
    section: {
      name: 'Section',
      fields: {
        id: {
          name: 'id',
          type: 'String',
          isId: true,
          attributes: [{ name: '@default', args: [] }],
        },
        createdAt: {
          name: 'createdAt',
          type: 'DateTime',
          attributes: [{ name: '@default', args: [] }],
        },
        updatedAt: {
          name: 'updatedAt',
          type: 'DateTime',
          attributes: [{ name: '@updatedAt', args: [] }],
        },
        name: {
          name: 'name',
          type: 'String',
        },
        parentId: {
          name: 'parentId',
          type: 'String',
          isOptional: true,
          isForeignKey: true,
          relationField: 'parent',
        },
        isVisible: {
          name: 'isVisible',
          type: 'Boolean',
          attributes: [{ name: '@default', args: [{ value: true }] }],
        },
        order: {
          name: 'order',
          type: 'Int',
        },
        children: {
          name: 'children',
          type: 'Section',
          isDataModel: true,
          isArray: true,
          backLink: 'parent',
        },
        parent: {
          name: 'parent',
          type: 'Section',
          isDataModel: true,
          isOptional: true,
          backLink: 'children',
          isRelationOwner: true,
          foreignKeyMapping: { id: 'parentId' },
        },
        href: {
          name: 'href',
          type: 'String',
          isOptional: true,
        },
      },
      uniqueConstraints: {
        id: {
          name: 'id',
          fields: ['id'],
        },
      },
    },
    page: {
      name: 'Page',
      fields: {
        id: {
          name: 'id',
          type: 'String',
          isId: true,
          attributes: [{ name: '@default', args: [] }],
        },
        createdAt: {
          name: 'createdAt',
          type: 'DateTime',
          attributes: [{ name: '@default', args: [] }],
        },
        updatedAt: {
          name: 'updatedAt',
          type: 'DateTime',
          attributes: [{ name: '@updatedAt', args: [] }],
        },
        name: {
          name: 'name',
          type: 'String',
        },
        slug: {
          name: 'slug',
          type: 'String',
        },
        blockComponents: {
          name: 'blockComponents',
          type: 'BlockComponent',
          isDataModel: true,
          isArray: true,
          backLink: 'page',
        },
      },
      uniqueConstraints: {
        id: {
          name: 'id',
          fields: ['id'],
        },
        slug: {
          name: 'slug',
          fields: ['slug'],
        },
      },
    },
    blockComponent: {
      name: 'BlockComponent',
      fields: {
        id: {
          name: 'id',
          type: 'String',
          isId: true,
          attributes: [{ name: '@default', args: [] }],
        },
        createdAt: {
          name: 'createdAt',
          type: 'DateTime',
          attributes: [{ name: '@default', args: [] }],
        },
        updatedAt: {
          name: 'updatedAt',
          type: 'DateTime',
          attributes: [{ name: '@updatedAt', args: [] }],
        },
        blockType: {
          name: 'blockType',
          type: 'BlockType',
        },
        content: {
          name: 'content',
          type: 'Json',
        },
        order: {
          name: 'order',
          type: 'Int',
          attributes: [{ name: '@default', args: [{ value: 0 }] }],
        },
        page: {
          name: 'page',
          type: 'Page',
          isDataModel: true,
          isOptional: true,
          backLink: 'blockComponents',
          isRelationOwner: true,
          foreignKeyMapping: { id: 'pageId' },
        },
        pageId: {
          name: 'pageId',
          type: 'String',
          isOptional: true,
          isForeignKey: true,
          relationField: 'page',
        },
      },
      uniqueConstraints: {
        id: {
          name: 'id',
          fields: ['id'],
        },
      },
    },
  },
  deleteCascade: {},
  authModel: 'User',
}
export default metadata
