generator client {
  provider = "prisma-client-js"
}

plugin hooks {
  provider = '@zenstackhq/tanstack-query'
  target = 'react'
  version = 'v5'
  output = "./src/lib/zenstack-hooks"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

abstract model BaseModel {
  id        String   @id @default(ulid()) @allow('read', true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User extends BaseModel {
  email    String  @unique
  password String  @password @omit
  name     String?
  role     Role    @default(USER)

  @@allow('create,read', true)
  @@allow('update,delete', auth().role == 'ADMIN')
}

enum Role {
  ADMIN
  USER
}


model Section extends BaseModel {
  name      String
  parentId  String?
  isVisible Boolean   @default(true)
  order     Int
  children  Section[] @relation("SectionToSection")
  parent    Section?  @relation("SectionToSection", fields: [parentId], references: [id], onDelete: Cascade)
  href      String? 

  @@allow('read', true)
  @@allow('all', auth().role == 'ADMIN')
}

// old
model Page extends BaseModel {
  name  String
  slug String @unique

	blockComponents BlockComponent[]

  @@allow('read', true)
  @@allow('all', auth().role == 'ADMIN')
}

enum BlockType {
  TITLE
  MARKDOWN
}

model BlockComponent extends BaseModel {
  blockType BlockType
  content Json
  order Int @default(0)
  page Page? @relation(fields: [pageId], references: [id])
  pageId String?

  @@allow('read', true)
  @@allow('all', auth().role == 'ADMIN')
}
