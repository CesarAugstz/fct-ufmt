generator client {
  provider = "prisma-client-js"
}

plugin hooks {
  provider = '@zenstackhq/tanstack-query'
  target = 'react'
  version = 'v5'
  output = "./src/lib/zenstack-hooks"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

abstract model BaseModel {
  id        String   @id @default(ulid()) @allow('read', true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  PROFESSOR
  USER
  ADMIN_PROFESSOR
}

model User extends BaseModel {
  email     String     @unique
  password  String     @password @omit
  name      String?
  role      Role       @default(USER)

  professor Professor?

  @@allow('create,read', true)
  @@allow('update,delete', auth().role == 'ADMIN' || auth() == this)
}

model Course extends BaseModel {
  name String @unique

  professors Professor[]

  @@allow('all', true)
}

type Publication {
  title   String
  authors String[]
  date    DateTime
  link    String?
}

enum ProjectStatus {
  ONGOING
  FINISHED
}

type ResearchProject {
  title       String
  startDate   DateTime
  endDate     DateTime?
  status      ProjectStatus
  description String?
}

type ExtensionProject {
  title       String
  startDate   DateTime
  status      ProjectStatus
  endDate     DateTime?
  description String?
}

model Professor extends BaseModel {
  courses           Course[]

  summary           String?
  specialties       String[]
  image             String?
  researchAreas     String[]
  officeHours       String?
  lattes            String?
  publications      Publication[]      @json
  researchProjects  ResearchProject[]  @json
  extensionProjects ExtensionProject[] @json 

  userId            String             @unique
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@allow('create,read', true)
  @@allow('update,delete', auth().role == 'ADMIN' || auth() == user)
}


